---
import { CollectionEntry, getCollection } from "astro:content";

import BaseLayout from "../../layouts/BaseLayout.astro";

import ContactCTA from "../../components/ContactCTA.astro";
import Hero from "../../components/Hero.astro";
import { Icon } from "astro-icon";

interface Props {
  entry: CollectionEntry<"work">;
}

// This is a dynamic route that generates a page for every Markdown file in src/content/
// Read more about dynamic routes and this `getStaticPaths` function in the Astro docs:
// https://docs.astro.build/en/core-concepts/routing/#dynamic-routes
export async function getStaticPaths() {
  const work = await getCollection("work");
  return work.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { Content } = await entry.render();
---

<BaseLayout title={entry.data.title} description={entry.data.description}>
  <div
    class="container mx-auto xl:max-w-[1250px] px-8 md:px-12 lg:px-20 py-4 md:py-8 lg:py-12"
  >
    <div>
      <header>
        <div>
          <a class="hover:underline underline-offset-4" href="/work/">Work</a>
          <Hero title={entry.data.title}>
            <div>
              <div class="flex justify-center lg:justify-start gap-5 mt-3">
                {
                  entry.data.tags.map((t) => (
                    <div class="lg:px-6 px-4 py-2 rounded-lg bg-indigo-500 text-zinc-50">
                      {t}
                    </div>
                  ))
                }
              </div>
              <p
                class="mt-5 lg:text-lg font-semibold text-zinc-700 dark:text-zinc-200"
              >
                {entry.data.description}
              </p>

              <div>
                {
                  entry.data.link && (
                    <a href={entry.data.link}>
                      <div class="flex items-center gap-2 mt-5">
                        <Icon
                          name="mdi:link-box-variant"
                          class="w-6 h-6 text-orange-300"
                        />
                        <p class="dark:text-orange-300 font-semibold text-orange-700">
                          {entry.data.link}
                        </p>
                      </div>
                    </a>
                  )
                }

                {
                  entry.data.github && (
                    <a href={entry.data.github}>
                      <div class="flex items-center gap-2 mt-5">
                        <Icon
                          name="mdi:github"
                          class="w-6 h-6 text-orange-300"
                        />
                        <p class="dark:text-orange-300 font-semibold text-orange-700">
                          {entry.data.github}
                        </p>
                      </div>
                    </a>
                  )
                }
              </div>
            </div>
          </Hero>
        </div>
      </header>
      <main class="mt-10">
        <div class="p-5">
          {
            entry.data.img && (
              <img
                src={entry.data.img}
                alt={entry.data.img_alt || ""}
                class="rounded-lg lg:w-3/4 w-full shadow-lg dark:shadow-zinc-700 mx-auto"
              />
            )
          }
          <div
            class="prose-zinc prose-p:text-zinc-800 prose-p:indent-4 dark:prose-p:text-zinc-200 prose-p:mt-4 mt-10 prose-p:leading-relaxed prose-h1:text-3xl prose-headings:my-4 prose-h2:text-2xl prose-h3:text-xl prose-headings:font-bold lg:w-3/4 mx-auto"
          >
            <Content />
          </div>
        </div>
      </main>
    </div>
    <ContactCTA />
  </div>
</BaseLayout>
