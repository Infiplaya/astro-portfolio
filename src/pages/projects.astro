---
import { getCollection } from "astro:content";

import BaseLayout from "../layouts/BaseLayout.astro";

import ContactCTA from "../components/ContactCTA.astro";
import Projects from "../components/Projects.astro";
import Hero from "../components/Hero.astro";
import Grid from "../components/Grid.astro";

const projects = (await getCollection("projects")).sort(
  (a, b) => b.data.publishDate.valueOf() - a.data.publishDate.valueOf()
);
---

<BaseLayout
  title="My Projects | Paweł Sobaniec"
  description="Learn about Paweł Sobaniec's most recent projects"
>
  <div class="max-w-6xl mx-auto px-8 mt-10 hide-ui">
    <main class="lg:mt-20 mt-10">
      <div class="space-y-20">
        <Hero title="My Work" />
        <Grid>
          {
            projects.map((project) => (
              <li>
                <Projects project={project} />
              </li>
            ))
          }
        </Grid>

        <section>
          <h2 class="text-3xl font-semibold text-center lg:text-left">
            Other projects
          </h2>
          <p
            class="text-center mt-3 text-zinc-800 dark:text-zinc-100 text-lg lg:text-left"
          >
            Check out more of my smaller projects that are available on my <a
              href="https://github.com/infiplaya"
              class="dark:text-orange-400 text-orange-600 font-medium hover:underline underline-offset-4"
              >Github</a
            >
          </p>
        </section>
      </div>
      <ContactCTA />
    </main>
  </div>
</BaseLayout>

<script defer>
  const observer = new IntersectionObserver((entries) => {
    entries.forEach((entry) => {
      console.log(entry);

      if (entry.isIntersecting) {
        entry.target.classList.add("show");
      } else {
        entry.target.classList.remove("show");
      }
    });
  });

  const hiddenElements = document.querySelectorAll(".hide-ui");
  hiddenElements.forEach((element) => observer.observe(element));
</script>
