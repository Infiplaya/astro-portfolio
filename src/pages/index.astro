---
import { getCollection } from "astro:content";

// Layout import — provides basic page elements: <head>, <nav>, <footer> etc.
import BaseLayout from "../layouts/BaseLayout.astro";

import { Image } from "@astrojs/image/components";

// Component Imports
import Grid from "../components/Grid.astro";
import PortfolioPreview from "../components/PortfolioPreview.astro";

// Page section components
import ContactCTA from "../components/ContactCTA.astro";
import Skills from "../components/Skills.astro";

// Content Fetching: List four most recent work projects
const projects = (await getCollection("work"))
  .sort((a, b) => b.data.publishDate.valueOf() - a.data.publishDate.valueOf())
  .slice(0, 4);
---

<BaseLayout>
  <div class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="mt-10 md:mt-20 p-3 hide-ui">
      <header
        class="flex flex-col-reverse lg:flex-row justify-center items-center gap-5 lg:gap-10 lg:items-center lg:w-full"
      >
        <div
          class="lg:flex-1 flex text-center lg:text-left flex-col justify-center lg:items-start"
        >
          <h2 class="text-3xl font-poppins lg:text-4xl">Hello There!</h2>
          <h1 class="text-4xl lg:text-5xl font-poppins">
            My name is <span
              class="decoration-orange-500 decoration-dashed underline underline-offset-8"
              >Paweł Sobaniec</span
            >
          </h1>
          <p class="mt-6 text-lg dark:text-zinc-200 text-zinc-800">
            I am a passionate web developer who is eager to build awesome user
            interfaces. I'm constantly seeking out opportunities to grow and
            improve my craft. I love Typescript, React, Nextjs and Astro.
            <a
              href="/about"
              class="font-bold text-orange-600 dark:text-orange-400 dark:hover:text-orange-300 hover:text-orange-500"
            >
              Check about me
            </a>
          </p>
        </div>

        <Image
          alt="Paweł Sobaniec profile picture"
          class="rounded-full lg:hidden w-36 h-36 shadow-md shadow-zinc-200 dark:shadow-zinc-700"
          src="/assets/avatar.webp"
          width={144}
          height={144}
        />

        <div class="flex-1">
          <Image
            alt="Paweł Sobaniec profile picture"
            class="rounded-xl flex-1 hidden lg:block w-full h-full border border-zinc-200 dark:border-zinc-800 shadow-lg dark:shadow-zinc-700 bg-zinc-100 dark:bg-zinc-900"
            src="/assets/avatar.webp"
            width={500}
            height={500}
          />
        </div>
      </header>

      <Skills />
    </div>

    <main class="mt-20 w-full hide-ui">
      <section class="p-3">
        <header class="flex flex-col text-center lg:text-left gap-2 lg:gap-4">
          <h3 class="font-bold text-3xl lg:text-4xl">Selected projects</h3>
          <p class="text-lg">
            I believe making projects is the best way to learn. Take a look at
            them!
          </p>
        </header>

        <div class="mt-5">
          <Grid variant="offset">
            {
              projects.map((project, index) => (
                <li class={index % 2 !== 0 ? "lg:pt-40" : null}>
                  <PortfolioPreview project={project} />
                </li>
              ))
            }
          </Grid>
        </div>

        <div class="relative group lg:w-44">
          <a href="/work/">
            <div
              class="absolute -z-10 -inset-0.5 lg:w-44 bg-gradient-to-r from-orange-600 to-lime-600 rounded-lg blur opacity-75 group-hover:opacity-100 transition duration-1000 group-hover:duration-200"
            >
            </div>
            <div
              class="mt-10 mb-10 bg-zinc-900 text-zinc-50 p-3 lg:w-44 text-center rounded-lg"
            >
              View More
            </div>
          </a>
        </div>
      </section>
    </main>
    <ContactCTA />
  </div>
</BaseLayout>

<script defer>
  const observer = new IntersectionObserver((entries) => {
    entries.forEach((entry) => {
      if (entry.isIntersecting) {
        entry.target.classList.add("show");
      } else {
        entry.target.classList.remove("show");
      }
    });
  });

  const hiddenElements = document.querySelectorAll(".hide-ui");
  hiddenElements.forEach((element) => observer.observe(element));
</script>
